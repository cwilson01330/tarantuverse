version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: tarantuverse-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: tarantuverse
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d tarantuverse"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: tarantuverse-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://user:password@postgres:5432/tarantuverse
      API_SECRET_KEY: dev-secret-key-change-in-production
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./apps/api:/app
      - /app/__pycache__
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Uncomment if you want to run the web app in Docker
  # web:
  #   build:
  #     context: ./apps/web
  #     dockerfile: Dockerfile.dev
  #   container_name: tarantuverse-web
  #   restart: unless-stopped
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     NEXT_PUBLIC_API_URL: http://localhost:8000
  #   volumes:
  #     - ./apps/web:/app
  #     - /app/node_modules
  #   command: pnpm dev

volumes:
  postgres-data:
